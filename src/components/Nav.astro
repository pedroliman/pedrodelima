---
import NavLink from './NavLink.astro';
import SearchBox from './SearchBox.astro';
import ThemeToggle from './ThemeToggle.astro';
import siteConfig from '../data/site-config';

const navLinks = siteConfig.headerNavLinks || [];
---

<nav class="backdrop-blur-md border-b border-neutral-700/50 sticky top-0 z-50 shadow-lg" style="background: linear-gradient(to right, rgba(38, 38, 38, 0.95), rgba(23, 23, 23, 0.95), rgba(38, 38, 38, 0.95));">
    <div class="w-full px-4 md:px-8">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between h-16">
                {navLinks.length > 0 && (
                    <>
                        <button
                            class="menu-toggle w-8 h-8 flex items-center justify-center relative z-30 md:hidden text-white hover:text-gray-200 transition-colors"
                            aria-label="Open Menu"
                            aria-expanded="false"
                            aria-controls="menu-items"
                        >
                            <span class="menu-toggle-icon w-6 h-px relative bg-current" />
                        </button>
                        
                        <ul id="menu-items" class="menu flex gap-8 items-center">
                            {navLinks.map((link) => (
                                <li>
                                    <NavLink
                                        class="text-base font-medium font-serif text-white hover:text-gray-200 transition-all duration-200 hover:drop-shadow-sm"
                                        href={link.href}
                                    >
                                        {link.text}
                                    </NavLink>
                                </li>
                            ))}
                        </ul>
                        
                    </>
                )}
            </div>
        </div>
    </div>
    <!-- Commented out the ThemeToggle component to hide it from the navigation bar -->
    <!-- <div class="absolute right-0 top-4 z-10 md:top-8">
        <ThemeToggle />
    </div> -->
</nav>

<style>
    @media (max-width: 767px) {
        .menu {
            @apply flex-col gap-4 fixed top-16 left-0 right-0 px-4 py-6 z-40 backdrop-blur-md border-b border-neutral-700/50 shadow-xl invisible opacity-0;
            background: linear-gradient(to bottom, rgba(38, 38, 38, 0.98), rgba(23, 23, 23, 0.98));
        }
        .menu.is-visible {
            @apply visible opacity-100;
            transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
        }
        .menu-toggle-icon {
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon {
            @apply w-0;
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .menu-toggle-icon:before,
        .menu-toggle-icon:after {
            @apply w-6 h-px absolute left-1/2 top-0 origin-center -translate-x-1/2 bg-current;
            content: '';
            transition:
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
        }
        .menu-toggle-icon:before {
            @apply -mt-1.5;
        }
        .menu-toggle-icon:after {
            @apply mt-1.5;
        }
        .menu-toggle.is-active .menu-toggle-icon:before,
        .menu-toggle.is-active .menu-toggle-icon:after {
            @apply mt-0;
            transition:
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s,
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon:before {
            @apply rotate-45;
        }
        .menu-toggle.is-active .menu-toggle-icon:after {
            @apply -rotate-45;
        }
    }
</style>

<script>
    function menuToggle() {
        const menu = document.querySelector('.menu');
        const menuToggleBtn = document.querySelector('.menu-toggle');
        menuToggleBtn?.addEventListener('click', () => {
            const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true';
            menuToggleBtn.classList.toggle('is-active');
            menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
            menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
            menu?.classList.toggle('is-visible');
        });
    }
    menuToggle();
    document.addEventListener('astro:after-swap', menuToggle);
</script>
