---
import type { Talk } from '../types/talk';
import talks from '../data/talks';

interface Props {
    publicationId: string;
    class?: string;
}

const { publicationId, class: className } = Astro.props;

// Find talks related to this publication
const relatedTalks = talks.filter((talk) => talk.relatedPublicationIds && talk.relatedPublicationIds.includes(publicationId));
---

{
    relatedTalks.length > 0 && (
        <div class:list={['related-talks', className]}>
            <div class="space-y-2">
                {relatedTalks.map((talk) => (
                    <div class="text-base pl-3 border-l-2 border-main/20">
                        <a href={`/talks/${talk.slug}`} class="text-main hover:underline hover:underline-offset-2">
                            {talk.venue}
                        </a>
                        <span class="text-main/70 ml-2">{new Date(talk.date).toLocaleDateString('en-US', {month: 'short', year: 'numeric'})}</span>
                    </div>
                ))}
            </div>
        </div>
    )
}
